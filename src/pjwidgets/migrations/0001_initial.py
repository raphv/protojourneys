# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-03-01 21:21
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pjapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityWidget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=200)),
                ('widget_name', models.CharField(db_index=True, max_length=200)),
                ('widget_verbose_name', models.CharField(blank=True, max_length=200)),
                ('position_index', models.PositiveSmallIntegerField(db_index=True)),
            ],
            options={
                'ordering': ['position_index'],
            },
        ),
        migrations.CreateModel(
            name='CheckListInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contents', models.TextField()),
                ('recordedstep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pjapp.RecordedStep')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CodeContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('artcode', models.CharField(blank=True, default='', max_length=200)),
                ('contents', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pjapp.Project')),
            ],
            options={
                'verbose_name': 'QR Code/Artcode content',
            },
        ),
        migrations.CreateModel(
            name='MapLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colour', models.CharField(choices=[('blue', 'blue'), ('brown', 'brown'), ('cyan', 'cyan'), ('green', 'green'), ('grey', 'grey'), ('orange', 'orange'), ('purple', 'purple'), ('red', 'red'), ('yellow', 'yellow')], default='blue', max_length=15)),
                ('label', models.CharField(db_index=True, max_length=200)),
                ('link_url', models.URLField(blank=True, default='')),
                ('latitude', models.DecimalField(decimal_places=5, max_digits=7, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(decimal_places=5, max_digits=8, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='OEmbedHtml',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=200)),
                ('provider_name', models.CharField(blank=True, default='', max_length=200)),
                ('url', models.URLField(db_index=True, unique=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('embed_html', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'OEmbed HTML source',
            },
        ),
        migrations.CreateModel(
            name='ScanQRInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='pjwidgets.CodeContent')),
                ('recordedstep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pjapp.RecordedStep')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'QR Code/Artcode in activity instance',
            },
        ),
        migrations.CreateModel(
            name='CheckList',
            fields=[
                ('widget', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pjwidgets.ActivityWidget')),
                ('contents', models.TextField()),
                ('allow_custom_items', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('widget', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pjwidgets.ActivityWidget')),
                ('text_when_not_on_location', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('text_when_on_location', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('show_map', models.BooleanField(default=True)),
                ('latitude', models.DecimalField(decimal_places=5, default=52.95333, max_digits=7, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(decimal_places=5, default=-1.15028, max_digits=8, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('maximum_distance', models.PositiveIntegerField(default=10, help_text='Distance to trigger content, in metres', validators=[django.core.validators.MinValueValidator(10)], verbose_name='Maximum distance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('widget', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pjwidgets.ActivityWidget')),
                ('zoom_level', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(18)])),
                ('centre_latitude', models.DecimalField(decimal_places=5, default=53.0, max_digits=7, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('centre_longitude', models.DecimalField(decimal_places=5, default=-1.0, max_digits=8, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OEmbed',
            fields=[
                ('widget', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pjwidgets.ActivityWidget')),
                ('url', models.URLField(db_index=True)),
            ],
            options={
                'verbose_name': 'OEmbed',
            },
        ),
        migrations.CreateModel(
            name='RichText',
            fields=[
                ('widget', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pjwidgets.ActivityWidget')),
                ('contents', ckeditor_uploader.fields.RichTextUploadingField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScanQR',
            fields=[
                ('widget', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pjwidgets.ActivityWidget')),
                ('text_before_scanning', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('use_artcodes', models.BooleanField(default=False)),
                ('active_codes', models.ManyToManyField(to='pjwidgets.CodeContent')),
            ],
            options={
                'verbose_name': 'QR Code/Artcode in activity',
                'verbose_name_plural': 'QR Code/Artcode in activities',
            },
        ),
        migrations.CreateModel(
            name='TimeLimit',
            fields=[
                ('widget', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pjwidgets.ActivityWidget')),
                ('text_when_early', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('text_when_on_time', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('text_when_late', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='')),
                ('minimum_time', models.DateTimeField(blank=True, null=True)),
                ('maximum_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='activitywidget',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='pjapp.Activity'),
        ),
        migrations.AddField(
            model_name='scanqrinstance',
            name='scanqr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='pjwidgets.ScanQR'),
        ),
        migrations.AddField(
            model_name='maplocation',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='pjwidgets.Map'),
        ),
        migrations.AddField(
            model_name='checklistinstance',
            name='checklist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='pjwidgets.CheckList'),
        ),
    ]
